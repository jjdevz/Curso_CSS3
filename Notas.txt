**CSS**

- El @import requiere que obligatoriamente se cargue la hoja para poder seguir avanzando en la lectura del código.
  Esto cuando está en el html dentro de la etiqueta <>style>
  El @import va entre las etiquetas <style>


Clases
Hacemos referencia a clases con el punto .nombre_clase

ID
No se recomienda el uso de ID con CSS, solo se permite un nombre de ID en todo el documento html
Se hace referencia con #nombre_id

Selectores Universales
Utilizados para resetear los estilos del navegador

Selectores de atributos
Van entre corchetes [atributo] ej [href]
También se puede poner con el valor [href="#"]

Selectores combinadores
Podemos seleccionar los que están por debajo pero no los que están por arriba
h1+h2 Selecciona el h2 por debajo de h1
h1~h3 Selecciona a todos los h3 que estén por debajo de h1 pertenecientes al mismo padre

Selectores descendentes
p span
div span
Directo: p > span

Metodología BEM (Bloque Elemeto Modificador)
Los Bloques se escriben con una palabra o dos palabras separadas por guión: menu / main-menu
Los Elementos se definen con el nombre del bloque al que pertenecen seguido de su nombre separados por dos guiones bajos: main-menu__item
Los Modificadores se nombran con el nombre del bloque al que pertenecen y su modificador con dos guiones medios: main-menu__item--active

BOX Model
La forma en que se dibujan las cajas se denomina Layout
En HTML hay dos tipos de elementos: En Linea (Inline) ocupan solo el espacio de su contenido; En Bloque (Block) ocupa todo el ancho disponible (viewport), se les puede asignar alto y ancho.
Propiedades de cajas (cada una tiene sus distancias respectivas): Contenido > Padding > Border > Outline > Margin
La diferencia entre el Border y Outline es que Border si hace que la caja ocupe más espacio pero Outline no. Outline se utiliza para ubicación de elementos.

MARGIN y PADDING
Van en sentido de las agujas del reloj: top, right, bottom y left.
Ala signar un valor se asigna a todo el mismo, al asignar dos valores el primero es para top y bottom y el otro left y right.
Al asignar tres valores el primero es para top, segundo para left y right y cuarto para bottom.
En resumen, menos valores asigna a el eje vertical (top-bottom) por encima del horizontal (left-right).

BORDER
Propiedades: width, style y color
Si se quiere especificar los lados, se trata igual que margin y padding.
border-with, border-style, border-color

OUTLINE
Tiene las mismas propiedades que border y adicional a estas el Offset
Sigue el mismo orden top-right-bottom-left
Offset permite valores negativos

POSITION
Valores: static (defecto), ralative, absolute, fixed y sticky.
Mover un elemento mediante z-index permite traer adelante o atrás elementos que comparten una misma posición.
Si ocultamos un elemento con "visibility: hidden" el espacio sigue ahí, caso contrario con "display: none"

POSITION RELATIVE
El elemento se coloca respecto a su posición en el flujo, su punto de referencia (top,right,bottom,left) no se modifica aunque movamos el elemento.
Para poder usar top,right,bottom,left se debe declarar primero el position: relative.
Estas propiedades pueden tomar valores negativos
Top y Left tienen mayor valor que Right y Bottom no importa la cascada
Si un elemento tiene su posición por defecto static, básicamente no está posicionado (sin z-index). Cualquier otro elemento relative se pondrá por encima de este.
El mayor z-index tiene prioridad
Aunque se mueva el elemento el espacio queda reservado

POSITION ABSOLUTE
El elemento se coloca respecto a su contenedor posicionado más cercano
El espacio no se reserva
Si no especificamos dimensiones, se ajusta al contenido
Su punto de referencia (top,right,bottom,left) del elemento que lo contiene no se modifica aunque lo movamos

POSITION RELATIVE
Comparte las características de Absolute, sólo que se posiciona respecto al viewport.
Aunque hagamos scroll el elemnto se mantiene fijado.

POSITION STICKY
Es una mezcla entre relative y fixed.
Conserva su espacio en el flujo
Cuando hacemos scroll el elemento se moverá hasta alcanzar el tope establecido

Z-INDEX
Modifica las capas en el eje Z (Profundidad)
Admite valores positivos y negativos (no se suele utilizar)
No es recomendable usar números consecutivos, mejor 100, 200, 300...
Si el padre tiene un z-index declarado, no podemos colocar un hijo por debajo de éste.
Si queremos que el hijo se coloque por debajo del padre, debemos colocar un z-index negativo pero el padre no debe tener z-index declarado

DISPLAY
inline: hacemos que un elemento de bloque se comporte como uno de linea
block: la caja se comporta como si fuera un elemento de bloque 
inline-block: se comporta como uno de línea pero acepta width y height
none: oculta el elemento pero se sigue renderizando. No conserva su espacio
table: imita el comportamiento de una tabla (desuso)
list-item: imita el comportamiento de una lista (desuso)
flex: maquetar componentes
grid: maquetar layout
Margin y Padding verticales a elementos en linea no los afecta. No empujan al elemento que tienen por debajo o por arriba

PSEUDO ELEMENTOS
selector::pseudo-elemento{estilos}
5 tipos: 	::first-line para elemtos de bloque, selecciona la primera línea
		::first-letter para elemtos de bloque, selecciona la primera letra
		::before Retirado de la especificación, se aplica cuando el usuario selecciona por ejemplo un texto en la pagina (para copiar etc)
		::after / ::selection La propiedad content es obligatoria, Son elementos de línea por defecto, Son hijos del elemento al que pertenecen
Los Pseudoelementos no pertenecen al DOM

PSEUDOCLASES
Selectores que reaccionan en tiempo real (como un elemento de escucha en JS)
Funcionan con todos los selectores de CSS, incluso solas
selector:pseudoclase{}
:pseudoclase{}
Algunas pseudoclases:
Para Links:
:link se utiliza cuando el enlace no ha sido visitado
:visited se utiliza cuando el enlace ya ha sido visitado
:active se aplica en el momento que mantenemos pulsado el click
Los border cogen el valor de la propiedad clor si está presente
:hover
:focus se puede aplicar por ejemplo a inputs de texto para cambiar color cuando estén activos
:target se utiliza a elementos que tienen el target (por ejemplo un id y una referencia mediante enlace a este)
:lang(lenguaje) lenguaje: en, es.. etc. Aplica estilos a etiquetas que tenga el atributo lang especificado

PseudoClases de Estructura
:root hace lo mismo que html{} pero tiene mayor peso por especificidad. Se usa cuando utilizamos variables CSS
:empty Selecciona etiquetas que no tienen contenido. Se puede usar cuando hay saltos de página no deseados
all:unset; es una propiedad que resetea todas las propiedades (sin estilos)
*Los siguientes reciben parámetros (odd, even, número o ecuación dependiente de n) n va valiendo desde 0 hasta la cantidad de selectores que haya:
:nth-child(n) - Selecciona al hijo n (independientemente del tipo de etiqueta)
:nth-last-child(n) A partir del último hijo cuenta n veces atrás y selecciona el elemento
:only-child solo se aplica si la etiqueta es hijo único, si agregaramos otra no funciona
*Las etiquetas type se usan cuando queremos seleccionar un elemento con un tipo de clase específica, no importa cuantos hijos con otras clases y selectores haya. Usa los mismos valores y funciona igual que los child:
:first-of-type
:last-of-type
:nth-of-type()
:nth-last-of-type()
:only-of-type
*Negation
:not() - Selecciona al elemento que no cumpla la condición, se puede poner cualquier clase o selector salvo otro :not

VARIABLES CSS
selector{
  --nombreVariable: valor;
}
uso-> propiedad: var(--nombreVariable)

BACKGROUND
background-color: Establece el color de fondo de la caja
background-image:url(ruta) Establece la imagen de fondo de la caja
background-repeat: Establece si la imagen se repite o no
    repeat-x|repeat-y|no-repeat
background-size: Establece el tamaño de la imagen de fondo
    x [y]|auto|cover|contain. 
    el valor en y es opcional, si no se lo ponemos lo calcula automáticamente
    cover cubre la caja por completo, aunque la imagen escape del contenedor
    contain la imagen se ajusta al contenido
background-position: Establece la posicion de la imagen, si no se especifica un segundo valor será center
    left top
    left center
    left bottom
    right top
    right center
    right bottom
    center top
    center center
    center bottom
    x% y%
    xpos ypos
    initial
    inherit

background-clip: Establece que parte de la caja rellenará el fondo
    Muestra la imagen desde donde le decimos, solo oculta, NO redimensiona
    border-box|padding-box|content-box

background-origin: Establece donde comienza el fondo
    Redimensiona la imagen para que ocupe la zona que le decimos
    border-box|padding-box|content-box

background-attachment: permite establecer si el fondo se coloca respecto a la caja o al viewport
    scroll|fixed

background-origin redimensiona el background para ocupar el espacio deseado, background-clip solo lo corta (u oculta), si es mas pequeña por ejemplo una imagen, no la aumenta

TIPOGRAFÍAS
Cuando el nombre de la fuente tiene más de una palabra debe ir entre comillas
Familias tipográficas
    Tienen nombre propio
      Arial, Times New Roman, open sans, ubuntu
Familias genéricas o seguras
    Su nombre se basa en sus características. Todos los navegadores la tienen
      serif: Tienen un adorno en los remates
      sans-serif: Tienen un corte seco en los remates
      cursive: emulan tipografia manuscrita
      fantasy: Letra decorativa
      monospace: Todos los caracteres tienen el mismo ancho
FONT
    font-family: Establece la familia tipográfica
        Se utiliza el nombre propio de la fuente o una familia genérica, se recomienda utilizar SIEMPRE fuentes de reserva ('Times New Roman', Times, serif)
    font-size: Establece el tamaño de fuente
        Se define en unidades:
	Relativas al documento:
            px: pixeles (medida absoluta)
            em: medida relativa al contexto (al padre)
            rem: medida relativa al html
            %: medida relativa al tamaño actual
	Relativas al viewport:
            vh: medida relativa al height del viewport
            vw: media relativa al width del viewport
            vmin: medida relativa al valor mínimo de viewport
            vmax: medida relativa al valor máximo de viewport
    font-weight: Establece el grosor de la fuente
        bold | normal | 100-900 (Suelen usarse con fuentes externas como google fonts, las fuentes normales generalmente no usan estos)
    font-style: Establece el estilo de la tipografía
        normal | italic | oblique
Se suele usar sans-serif por ser más facil de leer
Siempre colocar una genérica entre las familias de fuentes para no tener problemas
vmin se usa mucho en responsive
TEXT
    Text-transform: Transforma el texto a mayúsculas, minúsculas, etc.
        lowercase (minusculas) | uppercase (mayusculas) | capitalize (primera letra de cada palabra en mayusculas)
    text-align: Alinea el texto del elemento a la izquierda, derecha, etc. SOLO ELEMENTOS DE BLOQUE (excepto en botones, que aunque sean de elementos en línea funciona)
        center | left | right | justify (no se suele usar en web por el espacio que dejan entre palabras para ocupar el espacio)
    text-decoration: Establece la decoración del texto
        overline | line-through | underline | none
    text-indent: mueve la primera linea de un de texto. (Sangría) Acepta valores negativos SOLO ELEMENTOS DE BLOQUE
OTHER
    line-height: establece la altura de la linea. (Si tenemos una sola línea y colocamos la altura igual que su contenedor, se centraría verticalmente)
    letter-spacing: establece la separacion de las letras con una medida en cualquier unidad



